---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (for_stmt), \"for (i = 0; i < 10; i++) { a; }\")"
---
[
    For(
        For {
            initializer: Assignment(
                Assignment {
                    lhs: PlaceExpr {
                        ident: Ident(
                            "i",
                        ),
                        array_accesses: [],
                    },
                    op: Equal,
                    rhs: Atom(
                        Literal(
                            Number(
                                0,
                            ),
                        ),
                    ),
                },
            ),
            condition: Binary(
                Binary {
                    lhs: Atom(
                        Ident(
                            Ident(
                                "i",
                            ),
                        ),
                    ),
                    op: Less,
                    rhs: Atom(
                        Literal(
                            Number(
                                10,
                            ),
                        ),
                    ),
                },
            ),
            increment: ExprStmt(
                Atom(
                    Increment(
                        Increment {
                            expr: PlaceExpr {
                                ident: Ident(
                                    "i",
                                ),
                                array_accesses: [],
                            },
                            op: PlusPlus,
                            kind: Postfix,
                        },
                    ),
                ),
            ),
            block: Block {
                items: [
                    ExprStmt(
                        Atom(
                            Ident(
                                Ident(
                                    "a",
                                ),
                            ),
                        ),
                    ),
                ],
            },
        },
    ),
]
