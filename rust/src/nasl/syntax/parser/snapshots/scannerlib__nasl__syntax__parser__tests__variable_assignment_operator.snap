---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (variable_assignment_operator),\n\"a++; a--; a[1]++; a[1]--;\")"
---
[
    Stmt(
        ExprStmt(
            Unary(
                Unary {
                    op: Postfix(
                        PlusPlus,
                    ),
                    rhs: PlaceExpr(
                        Ident(
                            Ident(
                                "a",
                            ),
                        ),
                    ),
                },
            ),
        ),
    ),
    Stmt(
        ExprStmt(
            Unary(
                Unary {
                    op: Postfix(
                        MinusMinus,
                    ),
                    rhs: PlaceExpr(
                        Ident(
                            Ident(
                                "a",
                            ),
                        ),
                    ),
                },
            ),
        ),
    ),
    Stmt(
        ExprStmt(
            Unary(
                Unary {
                    op: Postfix(
                        PlusPlus,
                    ),
                    rhs: PlaceExpr(
                        ArrayAccess(
                            ArrayAccess {
                                index_expr: Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                                ident: Ident(
                                    "a",
                                ),
                            },
                        ),
                    ),
                },
            ),
        ),
    ),
    Stmt(
        ExprStmt(
            Unary(
                Unary {
                    op: Postfix(
                        MinusMinus,
                    ),
                    rhs: PlaceExpr(
                        ArrayAccess(
                            ArrayAccess {
                                index_expr: Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                                ident: Ident(
                                    "a",
                                ),
                            },
                        ),
                    ),
                },
            ),
        ),
    ),
]
