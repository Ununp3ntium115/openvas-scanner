---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (variable_assignment_operator),\n\"a++; a--; a[1]++; a[1]--;\")"
---
[
    ExprStmt(
        Atom(
            Increment(
                Increment {
                    expr: PlaceExpr {
                        ident: Ident(
                            "a",
                        ),
                        array_accesses: [],
                    },
                    op: PlusPlus,
                    kind: Postfix,
                },
            ),
        ),
    ),
    ExprStmt(
        Atom(
            Increment(
                Increment {
                    expr: PlaceExpr {
                        ident: Ident(
                            "a",
                        ),
                        array_accesses: [],
                    },
                    op: MinusMinus,
                    kind: Postfix,
                },
            ),
        ),
    ),
    ExprStmt(
        Atom(
            Increment(
                Increment {
                    expr: PlaceExpr {
                        ident: Ident(
                            "a",
                        ),
                        array_accesses: [
                            Atom(
                                Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                            ),
                        ],
                    },
                    op: PlusPlus,
                    kind: Postfix,
                },
            ),
        ),
    ),
    ExprStmt(
        Atom(
            Increment(
                Increment {
                    expr: PlaceExpr {
                        ident: Ident(
                            "a",
                        ),
                        array_accesses: [
                            Atom(
                                Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                            ),
                        ],
                    },
                    op: MinusMinus,
                    kind: Postfix,
                },
            ),
        ),
    ),
]
