---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (variable_assignment_operator),\n\"a++; a--; a[1]++; a[1]--;\")"
snapshot_kind: text
---
[
    ExprStmt(
        Unary(
            Unary {
                op: Postfix(
                    PlusPlus,
                ),
                rhs: Atom(
                    Ident(
                        Ident(
                            "a",
                        ),
                    ),
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Postfix(
                    MinusMinus,
                ),
                rhs: Atom(
                    Ident(
                        Ident(
                            "a",
                        ),
                    ),
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Postfix(
                    PlusPlus,
                ),
                rhs: Atom(
                    ArrayAccess(
                        ArrayAccess {
                            index_expr: Atom(
                                Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                            ),
                            lhs_expr: Atom(
                                Ident(
                                    Ident(
                                        "a",
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Postfix(
                    MinusMinus,
                ),
                rhs: Atom(
                    ArrayAccess(
                        ArrayAccess {
                            index_expr: Atom(
                                Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                            ),
                            lhs_expr: Atom(
                                Ident(
                                    Ident(
                                        "a",
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
            },
        ),
    ),
]
