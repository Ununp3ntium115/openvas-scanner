---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (unary_operators),\n\"\n    -a;\n    !a;\n    - - -a;\n    - - !a;\n    ! ! !a;\n    \")"
---
[
    ExprStmt(
        Unary(
            Unary {
                op: Minus,
                rhs: Atom(
                    Ident(
                        Ident(
                            "a",
                        ),
                    ),
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Bang,
                rhs: Atom(
                    Ident(
                        Ident(
                            "a",
                        ),
                    ),
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Minus,
                rhs: Unary(
                    Unary {
                        op: Minus,
                        rhs: Unary(
                            Unary {
                                op: Minus,
                                rhs: Atom(
                                    Ident(
                                        Ident(
                                            "a",
                                        ),
                                    ),
                                ),
                            },
                        ),
                    },
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Minus,
                rhs: Unary(
                    Unary {
                        op: Minus,
                        rhs: Unary(
                            Unary {
                                op: Bang,
                                rhs: Atom(
                                    Ident(
                                        Ident(
                                            "a",
                                        ),
                                    ),
                                ),
                            },
                        ),
                    },
                ),
            },
        ),
    ),
    ExprStmt(
        Unary(
            Unary {
                op: Bang,
                rhs: Unary(
                    Unary {
                        op: Bang,
                        rhs: Unary(
                            Unary {
                                op: Bang,
                                rhs: Atom(
                                    Ident(
                                        Ident(
                                            "a",
                                        ),
                                    ),
                                ),
                            },
                        ),
                    },
                ),
            },
        ),
    ),
]
