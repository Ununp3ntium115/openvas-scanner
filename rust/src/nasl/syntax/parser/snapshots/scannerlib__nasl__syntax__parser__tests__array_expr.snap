---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (array_expr),\n\"\n    a[1];\n    a[5 + 3];\n    a[5 + (3 * 4)];\n    a[1] * b[2];\n    a[b[1]];\n\")"
snapshot_kind: text
---
[
    ExprStmt(
        Atom(
            ArrayAccess(
                ArrayAccess {
                    index_expr: Atom(
                        Literal(
                            Number(
                                1,
                            ),
                        ),
                    ),
                    lhs_expr: Atom(
                        Ident(
                            Ident(
                                "a",
                            ),
                        ),
                    ),
                },
            ),
        ),
    ),
    ExprStmt(
        Atom(
            ArrayAccess(
                ArrayAccess {
                    index_expr: Binary(
                        Binary {
                            lhs: Atom(
                                Literal(
                                    Number(
                                        5,
                                    ),
                                ),
                            ),
                            op: Plus,
                            rhs: Atom(
                                Literal(
                                    Number(
                                        3,
                                    ),
                                ),
                            ),
                        },
                    ),
                    lhs_expr: Atom(
                        Ident(
                            Ident(
                                "a",
                            ),
                        ),
                    ),
                },
            ),
        ),
    ),
    ExprStmt(
        Atom(
            ArrayAccess(
                ArrayAccess {
                    index_expr: Binary(
                        Binary {
                            lhs: Atom(
                                Literal(
                                    Number(
                                        5,
                                    ),
                                ),
                            ),
                            op: Plus,
                            rhs: Binary(
                                Binary {
                                    lhs: Atom(
                                        Literal(
                                            Number(
                                                3,
                                            ),
                                        ),
                                    ),
                                    op: Star,
                                    rhs: Atom(
                                        Literal(
                                            Number(
                                                4,
                                            ),
                                        ),
                                    ),
                                },
                            ),
                        },
                    ),
                    lhs_expr: Atom(
                        Ident(
                            Ident(
                                "a",
                            ),
                        ),
                    ),
                },
            ),
        ),
    ),
    ExprStmt(
        Binary(
            Binary {
                lhs: Atom(
                    ArrayAccess(
                        ArrayAccess {
                            index_expr: Atom(
                                Literal(
                                    Number(
                                        1,
                                    ),
                                ),
                            ),
                            lhs_expr: Atom(
                                Ident(
                                    Ident(
                                        "a",
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
                op: Star,
                rhs: Atom(
                    ArrayAccess(
                        ArrayAccess {
                            index_expr: Atom(
                                Literal(
                                    Number(
                                        2,
                                    ),
                                ),
                            ),
                            lhs_expr: Atom(
                                Ident(
                                    Ident(
                                        "b",
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
            },
        ),
    ),
    ExprStmt(
        Atom(
            ArrayAccess(
                ArrayAccess {
                    index_expr: Atom(
                        ArrayAccess(
                            ArrayAccess {
                                index_expr: Atom(
                                    Literal(
                                        Number(
                                            1,
                                        ),
                                    ),
                                ),
                                lhs_expr: Atom(
                                    Ident(
                                        Ident(
                                            "b",
                                        ),
                                    ),
                                ),
                            },
                        ),
                    ),
                    lhs_expr: Atom(
                        Ident(
                            Ident(
                                "a",
                            ),
                        ),
                    ),
                },
            ),
        ),
    ),
]
