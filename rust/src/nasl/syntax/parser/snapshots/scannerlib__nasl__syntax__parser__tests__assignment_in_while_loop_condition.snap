---
source: src/nasl/syntax/parser/tests.rs
expression: "crate :: nasl :: syntax :: parser :: tests ::\nparse_program_ok(stringify! (assignment_in_while_loop_condition),\nr###\"\n    while(y = recv(socket:soc, length:1024)) {\n        buf1 += y;\n    }\n    \"###)"
---
[
    While(
        While {
            condition: Assignment(
                Assignment {
                    lhs: PlaceExpr {
                        ident: Ident(
                            "y",
                        ),
                        array_accesses: [],
                    },
                    op: Equal,
                    rhs: Atom(
                        FnCall(
                            FnCall {
                                fn_expr: Atom(
                                    Ident(
                                        Ident(
                                            "recv",
                                        ),
                                    ),
                                ),
                                args: CommaSeparated {
                                    items: [
                                        Named(
                                            NamedFnArg {
                                                ident: Ident(
                                                    "socket",
                                                ),
                                                expr: Atom(
                                                    Ident(
                                                        Ident(
                                                            "soc",
                                                        ),
                                                    ),
                                                ),
                                            },
                                        ),
                                        Named(
                                            NamedFnArg {
                                                ident: Ident(
                                                    "length",
                                                ),
                                                expr: Atom(
                                                    Literal(
                                                        Number(
                                                            1024,
                                                        ),
                                                    ),
                                                ),
                                            },
                                        ),
                                    ],
                                    delimiter: Paren,
                                },
                                num_repeats: None,
                            },
                        ),
                    ),
                },
            ),
            block: Block {
                items: [
                    ExprStmt(
                        Assignment(
                            Assignment {
                                lhs: PlaceExpr {
                                    ident: Ident(
                                        "buf1",
                                    ),
                                    array_accesses: [],
                                },
                                op: PlusEqual,
                                rhs: Atom(
                                    Ident(
                                        Ident(
                                            "y",
                                        ),
                                    ),
                                ),
                            },
                        ),
                    ),
                ],
            },
        },
    ),
]
